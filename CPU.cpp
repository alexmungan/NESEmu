
#include "CPU.hpp"

CPU::CPU() {

    //Initialize the opcode matrix https://web.archive.org/web/20221112231348if_/http://archive.6502.org/datasheets/rockwell_r650x_r651x.pdf
    opMatrix  = {{
    /*0*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*1*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*2*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*3*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*4*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*5*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*6*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*7*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*8*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*9*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*A*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*B*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*C*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*D*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*E*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0},
    /*F*/{"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}, {"", IMP, {}, 0}
    }};
}

CPU::~CPU() {
    //TODO
}

void CPU::setStatusReg(bool set, Flags flag) {
    if (set)
        status_reg |= (1 << flag);
    else
        status_reg &= ~(1 << flag);
}

bool CPU::getStatusReg(Flags flag)  {
    return (status_reg & (1 << flag));
}

void CPU::connect2Bus(SystemBus *bus_ptr) {
    system_bus_ptr = bus_ptr;
}

uint8_t CPU::read(uint16_t address) {
    return system_bus_ptr->read(address);
}

void CPU::write(uint16_t address, uint8_t data) {
    system_bus_ptr->write(address, data);
}

